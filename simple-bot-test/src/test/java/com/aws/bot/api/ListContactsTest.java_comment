package com.aws.bot.api;

import static org.junit.Assert.assertEquals;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.Test;
import org.mockito.Mock;

import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient;
import com.amazonaws.services.lambda.runtime.ClientContext;
import com.amazonaws.services.lambda.runtime.CognitoIdentity;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.LambdaLogger;
import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent;
import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyResponseEvent;

public class ListContactsTest {

    @Mock
    private AmazonDynamoDBClient dynamodbClient;
    private ListContacts listContacts;

    public ListContactsTest() {
        // dynamodbClient = mock(AmazonDynamoDBClient.class);
        this.listContacts = new ListContacts();
    }

    @Test
    public void shouldReturnSuccessfulResponse() {
        // set up mock input and output
        APIGatewayProxyRequestEvent mockInput = new APIGatewayProxyRequestEvent();
        APIGatewayProxyResponseEvent mockOutput = new APIGatewayProxyResponseEvent();

        // define expected output
        Integer expectedStatusCode = 200;
        String expectedContentType = "application/json";
        List<Map<String, String>> expectedContacts = Arrays.asList(new HashMap<>());

        // call handleRequest()
        mockOutput = listContacts.handleRequest(mockInput, getTestContext());

        assertEquals(expectedStatusCode, mockOutput.getStatusCode());
        assertEquals(expectedContentType, mockOutput.getHeaders().get("Content-Type"));
        assertEquals(expectedContacts, mockOutput.getBody());
    }

    private Context getTestContext() {
        return new Context() {
            @Override
            public String getAwsRequestId() {
                return "testAwstRequestId";
            }

            @Override
            public String getLogGroupName() {
                return "/aws/lambda/testFunction";
            }

            @Override
            public String getLogStreamName() {
                return "TestLogStreamName";
            }

            @Override
            public String getFunctionName() {
                return "testFunction";
            }

            @Override
            public String getFunctionVersion() {
                return "1";
            }

            @Override
            public String getInvokedFunctionArn() {
                return "arn:aws:lambda:us-east-1:815321926202:function:testFunction:$LATEST";
            }

            @Override
            public CognitoIdentity getIdentity() {
                return null;
            }

            @Override
            public ClientContext getClientContext() {
                return null;
            }

            @Override
            public int getRemainingTimeInMillis() {
                return 0;
            }

            @Override
            public int getMemoryLimitInMB() {
                return 128;
            }

            @Override
            public LambdaLogger getLogger(){
                return null;
            }
        };
    }
}
